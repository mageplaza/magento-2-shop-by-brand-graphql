type Query {
    mpbrand(
        filter: MageplazaBrandsFilterInput @doc(description: "Identifies which Mageplaza Brands attributes to search for and return."),
        pageSize: Int = 5 @doc(description: "Number of items should be shown on the page"),
        currentPage: Int = 1 @doc(description: "Allow page number to start from 1"),
        storeId: Int = 0 @doc(description: "Store View Id")
    ): MageplazaBrandsOutput
    @resolver(class: "Mageplaza\\ShopbybrandGraphQl\\Model\\Resolver\\Brands") @doc(description: "Queries search for Mageplaza Brands that match the filtered criteria.")
    mpbrandCategories (
        id: Int @doc(description: "Id of the brand category")
    ): [MageplazaBrandsCategories]
    @resolver(class: "Mageplaza\\ShopbybrandGraphQl\\Model\\Resolver\\BrandCategory") @doc(description: "The query searches for brand categories that match the searched criteria and filtered attributes")
    brandConfig (
        storeId: Int = 0 @doc(description: "Store View Id")
    ) : BrandConfig
    @resolver(class: "Mageplaza\\ShopbybrandGraphQl\\Model\\Resolver\\BrandConfigResolver") @doc(description: "The brand config query") @cache(cacheable: false)
}
input MageplazaBrandsFilterInput {
    brand_id: FilterTypeInput @doc(description: "Brand Id")
    option_id: FilterTypeInput @doc(description: "Option Id")
    url_key: FilterTypeInput @doc(description: "URL Key")
    is_featured: FilterTypeInput @doc(description: "Show brand on Featured block")
    is_display: FilterTypeInput @doc(description: "Show brand on frontend")
    value: FilterTypeInput @doc(description: "Brand Name")
    default_value: FilterTypeInput @doc(description: "Brand Default Value")
}
type MageplazaBrandsOutput {
    items: [MageplazaBrands] @doc(description: "MageplazaBrand data is satisfied"),
    total_count: Int @doc(description: "The total number of results returned when a query is applied"),
    page_info: SearchResultPageInfo @doc(description: "An object that includes the page info and current page values specified in the query")
}

type MageplazaBrands {
  brand_id: Int @doc(description: "Brand Id")
  attribute_id: Int @doc(description: "Brand Attribute Id")
  option_id: Int @doc(description: "Option Id")
  value: String @doc(description: "Brand Name")
  default_value: String @doc(description: "Brand Default Value")
  store_id: Int @doc(description: "Store Id")
  page_title: String @doc(description: "Brand Page Title")
  url_key: String @doc(description: "Url Key")
  image: String @doc(description: "Brand Image URL") @resolver(class: "Mageplaza\\ShopbybrandGraphQl\\Model\\Resolver\\Brands\\BrandImage")
  is_featured: Int @doc(description: "Show brand on Featured block")
  is_display: Int @doc(description: "Show brand on frontend")
  short_description: String @doc(description: "Short Description")
  description: String @doc(description: "Description")
  static_block: String @doc(description: "Static Block")
  meta_title: String @doc(description: "Meta Title")
  meta_keywords: String @doc(description: "Meta Keywords")
  meta_description: String @doc(description: "Meta Description")
  product_quantity: Int @doc(description: "Product Quantity of Brand")
  mpbrandCategories: [MageplazaBrandsCategories] @doc(description: "The categories assigned to a brand") @resolver(class: "Mageplaza\\ShopbybrandGraphQl\\Model\\Resolver\\Categories")
}

type MageplazaBrandsCategoriesOutput {
    total_count: Int @doc(description: "The total number of results returned when a query is applied"),
    items: [MageplazaBrandsCategories] @doc(description: "Mageplaza Shopbybrand Category data is satisfied")
}

type MageplazaBrandsCategories {
  cat_id: Int @doc(description: "Brand Category Id")
  status: Int @doc(description: "Status")
  store_ids: String @doc(description: "Store Ids")
  name: String @doc(description: "Name")
  url_key: String @doc(description: "URL Key")
  meta_title: String @doc(description: "Meta Title")
  meta_keywords: String @doc(description: "Meta Keywords")
  meta_description: String @doc(description: "Meta Description")
  meta_robots: String @doc(description: "Meta Robots")
  created_at: String @doc(description: "Creation date of the category")
  updated_at: String @doc(description: "Last modification date of the category")
  mpbrand: [MageplazaBrands] @doc(description: "The list of brands assigned to the category") @resolver(class: "Mageplaza\\ShopbybrandGraphQl\\Model\\Resolver\\Category\\Brands")
}

interface ProductInterface {
    mpbrand: MageplazaBrands @doc(description: "Mageplaza Shopbybrand Attribute data") @resolver(class: "Mageplaza\\ShopbybrandGraphQl\\Model\\Resolver\\Product\\Brand")
}

type Aggregation {
    is_mp_brand: Boolean @doc(description: "Mageplaza Shopbybrand Aggregation")
}

type BrandConfig @doc(description: "The type contains information about a brand config") {
    general: BrandGeneralConfig @doc(description: "Get General Config")
    brands_page_settings: BrandsPageSettingsConfig @doc(description: "Get All Brands Page Settings Config")
    brand_info: BrandInformationConfig @doc(description: "Get Brand Information Config")
    sidebar: SidebarConfig @doc(description: "Get Sidebar Config")
    seo: SeoConfig @doc(description: "Get SEO Config")
}

type BrandGeneralConfig {
    is_enabled: Int @doc(description: "Enabled")
    brand_attribute: String @doc(description: "Brand Attribute")
    brand_route: String @doc(description: "Brand Route")
    brand_link_title: String @doc(description: "Brand Link Title")
    show_brand_link_in: String @doc(description: "Show brand link in")
    show_brand_in_category_menu: Int @doc(description: "Show Brands in Category Menu")
    what_to_show: String @doc(description: "What to show")
    brand_menu_grid_layout: String @doc(description: "Brand Menu Grid Layout")
    maximum_brands_to_show: String @doc(description: "Maximum brands to show")
    show_brands_without_products_on_menu: Int @doc(description: "Show brands without products on menu")
    show_brand_info_on_product_listing_page: String @doc(description: "Show Brand Info on Product Listing Page")
    show_brand_info_in_product_page: String @doc(description: "Show Brand Info in Product Page")
    show_brand_info_in_product_admin_grid: String @doc(description: "Show Brand Info in Product Admin Grid")
    brand_logo_width_in_product_page: String @doc(description: "Brand Logo Width in Product Page")
    brand_logo_height_in_product_page: String @doc(description: "Brand Logo Height in Product Page")
}

type BrandsPageSettingsConfig {
    brand_list_name: String @doc(description: "Brand List Name")
    style_of_brand_list_page: Int @doc(description: "Style of Brand List Page")
    display_option: Int @doc(description: "Display Option")
    brand_logo_width: String @doc(description: "Brand Logo Width")
    brand_logo_height: String @doc(description: "Brand Logo Height")
    style_color: String @doc(description: "Style Color")
    show_brand_short_description: Int @doc(description: "Show Brand Short Description")
    show_brands_without_products: Int @doc(description: "Show brands without products")
    show_brand_product_quantity: Int @doc(description: "Show Brand Product Quantity")
    show_brand_quick_view_popup: Int @doc(description: "Show Brand Quick View Popup")
    custom_css: String @doc(description: "Custom CSS")
    show_brand_categories_filter: Int @doc(description: "Show Brand Categories Filter")
    show_brand_alphabet_filter: Int @doc(description: "Show Brand Alphabet Filter")
    brand_filter_alphabet: String @doc(description: "Brand Alphabet")
    brand_filter_character_set: String @doc(description: "Character Set")
    show_brand_search_block: Int @doc(description: "Show Search Block")
    brand_search_min_chars: String @doc(description: "Min chars")
    brand_search_number_of_search_result: String @doc(description: "Number of Search Result")
    brand_search_show_thumbnail_image: Int @doc(description: "Show Thumbnail Image")
    show_featured_brands: Int @doc(description: "Show Featured Brands")
    display_featured_brands_style: Int @doc(description: "Display Featured Brands Style")
    featured_brand_title: String @doc(description: "Featured Brands Title")
    display_information_featured_brands: Int @doc(description: "Display Information")
    show_related_products: Int @doc(description: "Show Related Products")
    brand_related_title: String @doc(description: "Brand Related Title")
    brand_related_limit: String @doc(description: "Brand Related Limit")
}

type BrandInformationConfig {
    default_image: String @doc(description: "Default Image")
    default_block: String @doc(description: "Default Block")
    show_brand_image_on_brand_page: Int @doc(description: "Show Brand Image On Brand Page")
    show_brand_description_on_brand_page: Int @doc(description: "Show Brand Description On Brand Page")
    show_brand_static_block_on_brand_page: Int @doc(description: "Show Brand Static Block On Brand Page")
}

type SidebarConfig {
    show_featured_brands: Int @doc(description: "Show Featured Brands")
    featured_brand_title: String @doc(description: "Featured Brands Title")
    featured_brand_show_title: Int @doc(description: "Featured Brand Show Title")
    show_brand_thumbnail: Int @doc(description: "Show Brand Thumbnail")
    brand_thumbnail_title: String @doc(description: "Brand Thumbnail Title")
    brands_qty_limit: String @doc(description: "Brand's Qty Limit")
    show_category_brand: Int @doc(description: "Show Category Brand")
    category_brand_title: String @doc(description: "Category Brand Title")
    category_qty_limit: String @doc(description: "Category's Qty Limit")
    show_brand_category_quantity: Int @doc(description: "Show Brand Category Quantity")
}

type SeoConfig {
    add_noindex_to_pagination_pages: Int @doc(description: "Add Noindex to Pagination Pages")
}
